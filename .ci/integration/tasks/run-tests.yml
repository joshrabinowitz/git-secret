---
- name: Run ci-test
  command: bash -lc "cd /tmp/git-secret && make test"
  changed_when: False
  ignore_errors: yes
  register: test_results
  environment:
    PATH: /usr/local/bin:{{ ansible_env.PATH }}

- name: Print ci-test results
  debug:
    var: test_results.stdout_lines

- name: Create file when ci-test passes
  file:
    path: /.git-secret_test-passed
    state: touch
  when:
    - test_results.rc == 0

- name: Run lint
  command: bash -lc "cd /tmp/git-secret && make lint"
  ignore_errors: yes
  register: lint_results
  changed_when: False

- name: Print lint results
  debug:
    var: lint_results.stdout_lines

- name: Create file when lint passes
  file:
    path: /.git-secret_lint-passed
    state: touch
  when:
    - lint_results.rc == 0

- name: Create git-secret OS-specific package
  command: bash -lc "cd /tmp/git-secret && make build-{{ os_pkg_type }}"
  changed_when: False
  ignore_errors: yes
  register: test_results
  environment:
    PATH: /usr/local/bin:{{ ansible_env.PATH }}

- name: Find git-secret OS-specific file
  find:
    paths: /tmp/git-secret/build
    patterns: "*.{{ os_pkg_type }}"
    recurse: yes
  register: pkg_location

- name: Set git-secret OS-specific location
  set_fact:
    pkg_path: "{{ pkg_location.files | map(attribute='path') | first }}"
  when:
    - pkg_location is defined

- name: Install git-secret OS-specific package
  command: bash -lc "{{ item.command }} {{ pkg_path }}"
  when:
    - item.os_family == ansible_os_family
  with_items:
    - command: "rpm --nodeps --install --force"
      os_family: "RedHat"
    - command: "dpkg --force-all --install"
      os_family: "Debian"
    - command: "apk add --allow-untrusted"
      os_family: "Alpine"
